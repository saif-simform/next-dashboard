"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(rsc)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* reexport safe */ _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__.AuthError),\n/* harmony export */   \"default\": () => (/* binding */ NextAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var _lib_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/env.js */ \"(rsc)/./node_modules/next-auth/lib/env.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"(rsc)/./node_modules/next-auth/lib/index.js\");\n/* harmony import */ var _lib_actions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/actions.js */ \"(rsc)/./node_modules/next-auth/lib/actions.js\");\n/* harmony import */ var _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @auth/core/errors */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/**\n * _If you are looking to migrate from v4, visit the [Upgrade Guide (v5)](https://authjs.dev/guides/upgrade-to-v5)._\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install next-auth@beta\n * ```\n *\n * ## Environment variable inference\n *\n * `NEXTAUTH_URL` and `NEXTAUTH_SECRET` have been inferred since v4.\n *\n * Since NextAuth.js v5 can also automatically infer environment variables that are prefixed with `AUTH_`.\n *\n * For example `AUTH_GITHUB_ID` and `AUTH_GITHUB_SECRET` will be used as the `clientId` and `clientSecret` options for the GitHub provider.\n *\n * :::tip\n * The environment variable name inferring has the following format for OAuth providers: `AUTH_{PROVIDER}_{ID|SECRET}`.\n *\n * `PROVIDER` is the uppercase snake case version of the provider's id, followed by either `ID` or `SECRET` respectively.\n * :::\n *\n * `AUTH_SECRET` and `AUTH_URL` are also aliased for `NEXTAUTH_SECRET` and `NEXTAUTH_URL` for consistency.\n *\n * To add social login to your app, the configuration becomes:\n *\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"next-auth/providers/github\"\n * export const { handlers, auth } = NextAuth({ providers: [ GitHub ] })\n * ```\n *\n * And the `.env.local` file:\n *\n * ```sh title=\".env.local\"\n * AUTH_GITHUB_ID=...\n * AUTH_GITHUB_SECRET=...\n * AUTH_SECRET=...\n * ```\n *\n * :::tip\n * In production, `AUTH_SECRET` is a required environment variable - if not set, NextAuth.js will throw an error. See [MissingSecretError](https://authjs.dev/reference/core/errors#missingsecret) for more details.\n * :::\n *\n * If you need to override the default values for a provider, you can still call it as a function `GitHub({...})` as before.\n *\n * ## Lazy initialization\n * You can also initialize NextAuth.js lazily (previously known as advanced intialization), which allows you to access the request context in the configuration in some cases, like Route Handlers, Middleware, API Routes or `getServerSideProps`.\n * The above example becomes:\n *\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"next-auth/providers/github\"\n * export const { handlers, auth } = NextAuth(req => {\n *  if (req) {\n *   console.log(req) // do something with the request\n *  }\n *  return { providers: [ GitHub ] }\n * })\n * ```\n *\n * :::tip\n * This is useful if you want to customize the configuration based on the request, for example, to add a different provider in staging/dev environments.\n * :::\n *\n * @module next-auth\n */ \n\n\n\n\n/**\n *  Initialize NextAuth.js.\n *\n *  @example\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * export const { handlers, auth } = NextAuth({ providers: [GitHub] })\n * ```\n *\n * Lazy initialization:\n * @example\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * export const { handlers, auth } = NextAuth((req) => {\n *   console.log(req) // do something with the request\n *   return {\n *     providers: [GitHub],\n *   },\n * })\n * ```\n */ function NextAuth(config) {\n    if (typeof config === \"function\") {\n        const httpHandler = (req)=>{\n            const _config = config(req);\n            (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n            return (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)((0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.reqWithEnvURL)(req), _config);\n        };\n        return {\n            handlers: {\n                GET: httpHandler,\n                POST: httpHandler\n            },\n            // @ts-expect-error\n            auth: (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.initAuth)(config, (c)=>(0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(c)),\n            signIn: (provider, options, authorizationParams)=>{\n                const _config = config(undefined);\n                (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n                return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signIn)(provider, options, authorizationParams, _config);\n            },\n            signOut: (options)=>{\n                const _config = config(undefined);\n                (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n                return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signOut)(options, _config);\n            },\n            unstable_update: (data)=>{\n                const _config = config(undefined);\n                (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n                return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.update)(data, _config);\n            }\n        };\n    }\n    (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(config);\n    const httpHandler = (req)=>(0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)((0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.reqWithEnvURL)(req), config);\n    return {\n        handlers: {\n            GET: httpHandler,\n            POST: httpHandler\n        },\n        // @ts-expect-error\n        auth: (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.initAuth)(config),\n        signIn: (provider, options, authorizationParams)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signIn)(provider, options, authorizationParams, config);\n        },\n        signOut: (options)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signOut)(options, config);\n        },\n        unstable_update: (data)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.update)(data, config);\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/actions.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/lib/actions.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createActionURL: () => (/* binding */ createActionURL),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   update: () => (/* binding */ update)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(rsc)/./node_modules/next/dist/api/navigation.js\");\n\n\n\nasync function signIn(provider, options = {}, authorizationParams, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    const { redirect: shouldRedirect = true, redirectTo, ...rest } = options instanceof FormData ? Object.fromEntries(options) : options;\n    const callbackUrl = redirectTo?.toString() ?? headers.get(\"Referer\") ?? \"/\";\n    const signInURL = createActionURL(\"signin\", headers, config.basePath);\n    if (!provider) {\n        signInURL.searchParams.append(\"callbackUrl\", callbackUrl);\n        if (shouldRedirect) (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(signInURL.toString());\n        return signInURL.toString();\n    }\n    let url = `${signInURL}/${provider}?${new URLSearchParams(authorizationParams)}`;\n    let foundProvider = {};\n    for (const providerConfig of config.providers){\n        const { options, ...defaults } = typeof providerConfig === \"function\" ? providerConfig() : providerConfig;\n        const id = options?.id ?? defaults.id;\n        if (id === provider) {\n            foundProvider = {\n                id,\n                type: options?.type ?? defaults.type\n            };\n            break;\n        }\n    }\n    if (!foundProvider.id) {\n        const url = `${signInURL}?${new URLSearchParams({\n            callbackUrl\n        })}`;\n        if (shouldRedirect) (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(url);\n        return url;\n    }\n    if (foundProvider.type === \"credentials\") {\n        url = url.replace(\"signin\", \"callback\");\n    }\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const body = new URLSearchParams({\n        ...rest,\n        callbackUrl\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    if (shouldRedirect) return (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(res.redirect);\n    return res.redirect;\n}\nasync function signOut(options, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const url = createActionURL(\"signout\", headers, config.basePath);\n    const callbackUrl = options?.redirectTo ?? headers.get(\"Referer\") ?? \"/\";\n    const body = new URLSearchParams({\n        callbackUrl\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    if (options?.redirect ?? true) return (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(res.redirect);\n    return res;\n}\nasync function update(data, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/json\");\n    const url = createActionURL(\"session\", headers, config.basePath);\n    const body = JSON.stringify({\n        data\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    return res.body;\n}\n/**\n * Extract the origin and base path from either `AUTH_URL` or `NEXTAUTH_URL` environment variables,\n * or the request's headers and the {@link NextAuthConfig.basePath} option.\n */ function createActionURL(action, h, basePath) {\n    const envUrl = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (envUrl) {\n        const { origin, pathname } = new URL(envUrl);\n        const separator = pathname.endsWith(\"/\") ? \"\" : \"/\";\n        return new URL(`${origin}${pathname}${separator}${action}`);\n    }\n    const host = h.get(\"x-forwarded-host\") ?? h.get(\"host\");\n    const protocol = h.get(\"x-forwarded-proto\") === \"http\" ? \"http\" : \"https\";\n    // @ts-expect-error `basePath` value is default'ed to \"/api/auth\" in `setEnvDefaults`\n    const { origin, pathname } = new URL(basePath, `${protocol}://${host}`);\n    const separator = pathname.endsWith(\"/\") ? \"\" : \"/\";\n    return new URL(`${origin}${pathname}${separator}${action}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/actions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/env.js":
/*!*******************************************!*\
  !*** ./node_modules/next-auth/lib/env.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reqWithEnvURL: () => (/* binding */ reqWithEnvURL),\n/* harmony export */   setEnvDefaults: () => (/* binding */ setEnvDefaults)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-request */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-request.js\");\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/@auth/core/index.js\");\n\n\n/** If `NEXTAUTH_URL` or `AUTH_URL` is defined, override the request's URL. */ function reqWithEnvURL(req) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (!url) return req;\n    const { origin: envOrigin } = new URL(url);\n    const { href, origin } = req.nextUrl;\n    return new next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__(href.replace(origin, envOrigin), req);\n}\n/**\n * For backwards compatibility, `next-auth` checks for `NEXTAUTH_URL`\n * and the `basePath` by default is `/api/auth` instead of `/auth`\n * (which is the default for all other Auth.js integrations).\n *\n * For the same reason, `NEXTAUTH_SECRET` is also checked.\n */ function setEnvDefaults(config) {\n    try {\n        config.secret ?? (config.secret = process.env.AUTH_SECRET ?? process.env.NEXTAUTH_SECRET);\n        const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n        if (!url) return;\n        const { pathname } = new URL(url);\n        if (pathname === \"/\") return;\n        config.basePath || (config.basePath = pathname);\n    } catch  {} finally{\n        config.basePath || (config.basePath = \"/api/auth\");\n        (0,_auth_core__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(process.env, config);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2xpYi9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQztBQUN3QjtBQUNsRSw0RUFBNEUsR0FDckUsU0FBU0csY0FBY0MsR0FBRztJQUM3QixNQUFNQyxNQUFNQyxRQUFRQyxHQUFHLENBQUNDLFFBQVEsSUFBSUYsUUFBUUMsR0FBRyxDQUFDRSxZQUFZO0lBQzVELElBQUksQ0FBQ0osS0FDRCxPQUFPRDtJQUNYLE1BQU0sRUFBRU0sUUFBUUMsU0FBUyxFQUFFLEdBQUcsSUFBSUMsSUFBSVA7SUFDdEMsTUFBTSxFQUFFUSxJQUFJLEVBQUVILE1BQU0sRUFBRSxHQUFHTixJQUFJVSxPQUFPO0lBQ3BDLE9BQU8sSUFBSWQsc0VBQVdBLENBQUNhLEtBQUtFLE9BQU8sQ0FBQ0wsUUFBUUMsWUFBWVA7QUFDNUQ7QUFDQTs7Ozs7O0NBTUMsR0FDTSxTQUFTSCxlQUFlZSxNQUFNO0lBQ2pDLElBQUk7UUFDQUEsT0FBT0MsTUFBTSxJQUFLRCxDQUFBQSxPQUFPQyxNQUFNLEdBQUdYLFFBQVFDLEdBQUcsQ0FBQ1csV0FBVyxJQUFJWixRQUFRQyxHQUFHLENBQUNZLGVBQWU7UUFDeEYsTUFBTWQsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxRQUFRLElBQUlGLFFBQVFDLEdBQUcsQ0FBQ0UsWUFBWTtRQUM1RCxJQUFJLENBQUNKLEtBQ0Q7UUFDSixNQUFNLEVBQUVlLFFBQVEsRUFBRSxHQUFHLElBQUlSLElBQUlQO1FBQzdCLElBQUllLGFBQWEsS0FDYjtRQUNKSixPQUFPSyxRQUFRLElBQUtMLENBQUFBLE9BQU9LLFFBQVEsR0FBR0QsUUFBTztJQUNqRCxFQUNBLE9BQU0sQ0FDTixTQUNRO1FBQ0pKLE9BQU9LLFFBQVEsSUFBS0wsQ0FBQUEsT0FBT0ssUUFBUSxHQUFHLFdBQVU7UUFDaERuQiwwREFBa0JBLENBQUNJLFFBQVFDLEdBQUcsRUFBRVM7SUFDcEM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9saWIvZW52LmpzPzU4YWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IHNldEVudkRlZmF1bHRzIGFzIGNvcmVTZXRFbnZEZWZhdWx0cyB9IGZyb20gXCJAYXV0aC9jb3JlXCI7XG4vKiogSWYgYE5FWFRBVVRIX1VSTGAgb3IgYEFVVEhfVVJMYCBpcyBkZWZpbmVkLCBvdmVycmlkZSB0aGUgcmVxdWVzdCdzIFVSTC4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXFXaXRoRW52VVJMKHJlcSkge1xuICAgIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52LkFVVEhfVVJMID8/IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTDtcbiAgICBpZiAoIXVybClcbiAgICAgICAgcmV0dXJuIHJlcTtcbiAgICBjb25zdCB7IG9yaWdpbjogZW52T3JpZ2luIH0gPSBuZXcgVVJMKHVybCk7XG4gICAgY29uc3QgeyBocmVmLCBvcmlnaW4gfSA9IHJlcS5uZXh0VXJsO1xuICAgIHJldHVybiBuZXcgTmV4dFJlcXVlc3QoaHJlZi5yZXBsYWNlKG9yaWdpbiwgZW52T3JpZ2luKSwgcmVxKTtcbn1cbi8qKlxuICogRm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LCBgbmV4dC1hdXRoYCBjaGVja3MgZm9yIGBORVhUQVVUSF9VUkxgXG4gKiBhbmQgdGhlIGBiYXNlUGF0aGAgYnkgZGVmYXVsdCBpcyBgL2FwaS9hdXRoYCBpbnN0ZWFkIG9mIGAvYXV0aGBcbiAqICh3aGljaCBpcyB0aGUgZGVmYXVsdCBmb3IgYWxsIG90aGVyIEF1dGguanMgaW50ZWdyYXRpb25zKS5cbiAqXG4gKiBGb3IgdGhlIHNhbWUgcmVhc29uLCBgTkVYVEFVVEhfU0VDUkVUYCBpcyBhbHNvIGNoZWNrZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRFbnZEZWZhdWx0cyhjb25maWcpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25maWcuc2VjcmV0ID8/IChjb25maWcuc2VjcmV0ID0gcHJvY2Vzcy5lbnYuQVVUSF9TRUNSRVQgPz8gcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVUKTtcbiAgICAgICAgY29uc3QgdXJsID0gcHJvY2Vzcy5lbnYuQVVUSF9VUkwgPz8gcHJvY2Vzcy5lbnYuTkVYVEFVVEhfVVJMO1xuICAgICAgICBpZiAoIXVybClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgeyBwYXRobmFtZSB9ID0gbmV3IFVSTCh1cmwpO1xuICAgICAgICBpZiAocGF0aG5hbWUgPT09IFwiL1wiKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25maWcuYmFzZVBhdGggfHwgKGNvbmZpZy5iYXNlUGF0aCA9IHBhdGhuYW1lKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgY29uZmlnLmJhc2VQYXRoIHx8IChjb25maWcuYmFzZVBhdGggPSBcIi9hcGkvYXV0aFwiKTtcbiAgICAgICAgY29yZVNldEVudkRlZmF1bHRzKHByb2Nlc3MuZW52LCBjb25maWcpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVxdWVzdCIsInNldEVudkRlZmF1bHRzIiwiY29yZVNldEVudkRlZmF1bHRzIiwicmVxV2l0aEVudlVSTCIsInJlcSIsInVybCIsInByb2Nlc3MiLCJlbnYiLCJBVVRIX1VSTCIsIk5FWFRBVVRIX1VSTCIsIm9yaWdpbiIsImVudk9yaWdpbiIsIlVSTCIsImhyZWYiLCJuZXh0VXJsIiwicmVwbGFjZSIsImNvbmZpZyIsInNlY3JldCIsIkFVVEhfU0VDUkVUIiwiTkVYVEFVVEhfU0VDUkVUIiwicGF0aG5hbWUiLCJiYXNlUGF0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/env.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/lib/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initAuth: () => (/* binding */ initAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./env.js */ \"(rsc)/./node_modules/next-auth/lib/env.js\");\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions.js */ \"(rsc)/./node_modules/next-auth/lib/actions.js\");\n\n\n\n\n\nasync function getSession(headers, config) {\n    const url = (0,_actions_js__WEBPACK_IMPORTED_MODULE_4__.createActionURL)(\"session\", headers, config.basePath);\n    const request = new Request(url, {\n        headers: {\n            cookie: headers.get(\"cookie\") ?? \"\"\n        }\n    });\n    return (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(request, {\n        ...config,\n        callbacks: {\n            ...config.callbacks,\n            // Since we are server-side, we don't need to filter out the session data\n            // See https://authjs.dev/guides/upgrade-to-v5/v5#authenticating-server-side\n            // TODO: Taint the session data to prevent accidental leakage to the client\n            // https://react.devreference/nextjs/react/experimental_taintObjectReference\n            async session (...args) {\n                const session = // If the user defined a custom session callback, use that instead\n                await config.callbacks?.session?.(...args) ?? {\n                    ...args[0].session,\n                    expires: args[0].session.expires?.toISOString?.() ?? args[0].session.expires\n                };\n                const user = args[0].user ?? args[0].token;\n                return {\n                    user,\n                    ...session\n                };\n            }\n        }\n    });\n}\nfunction isReqWrapper(arg) {\n    return typeof arg === \"function\";\n}\nfunction initAuth(config, onLazyLoad // To set the default env vars\n) {\n    if (typeof config === \"function\") {\n        return (...args)=>{\n            if (!args.length) {\n                // React Server Components\n                const _headers = (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)();\n                const _config = config(undefined); // Review: Should we pass headers() here instead?\n                onLazyLoad?.(_config);\n                return getSession(_headers, _config).then((r)=>r.json());\n            }\n            if (args[0] instanceof Request) {\n                // middleware.ts inline\n                // export { auth as default } from \"auth\"\n                const req = args[0];\n                const ev = args[1];\n                const _config = config(req);\n                onLazyLoad?.(_config);\n                // args[0] is supposed to be NextRequest but the instanceof check is failing.\n                return handleAuth([\n                    req,\n                    ev\n                ], _config);\n            }\n            if (isReqWrapper(args[0])) {\n                // middleware.ts wrapper/route.ts\n                // import { auth } from \"auth\"\n                // export default auth((req) => { console.log(req.auth) }})\n                const userMiddlewareOrRoute = args[0];\n                return async (...args)=>{\n                    return handleAuth(args, config(args[0]), userMiddlewareOrRoute);\n                };\n            }\n            // API Routes, getServerSideProps\n            const request = \"req\" in args[0] ? args[0].req : args[0];\n            const response = \"res\" in args[0] ? args[0].res : args[1];\n            // @ts-expect-error -- request is NextRequest\n            const _config = config(request);\n            onLazyLoad?.(_config);\n            // @ts-expect-error -- request is NextRequest\n            return getSession(new Headers(request.headers), _config).then(async (authResponse)=>{\n                const auth = await authResponse.json();\n                for (const cookie of authResponse.headers.getSetCookie())if (\"headers\" in response) response.headers.append(\"set-cookie\", cookie);\n                else response.appendHeader(\"set-cookie\", cookie);\n                return auth;\n            });\n        };\n    }\n    return (...args)=>{\n        if (!args.length) {\n            // React Server Components\n            return getSession((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)(), config).then((r)=>r.json());\n        }\n        if (args[0] instanceof Request) {\n            // middleware.ts inline\n            // export { auth as default } from \"auth\"\n            const req = args[0];\n            const ev = args[1];\n            return handleAuth([\n                req,\n                ev\n            ], config);\n        }\n        if (isReqWrapper(args[0])) {\n            // middleware.ts wrapper/route.ts\n            // import { auth } from \"auth\"\n            // export default auth((req) => { console.log(req.auth) }})\n            const userMiddlewareOrRoute = args[0];\n            return async (...args)=>{\n                return handleAuth(args, config, userMiddlewareOrRoute).then((res)=>{\n                    return res;\n                });\n            };\n        }\n        // API Routes, getServerSideProps\n        const request = \"req\" in args[0] ? args[0].req : args[0];\n        const response = \"res\" in args[0] ? args[0].res : args[1];\n        return getSession(// @ts-expect-error\n        new Headers(request.headers), config).then(async (authResponse)=>{\n            const auth = await authResponse.json();\n            for (const cookie of authResponse.headers.getSetCookie())if (\"headers\" in response) response.headers.append(\"set-cookie\", cookie);\n            else response.appendHeader(\"set-cookie\", cookie);\n            return auth;\n        });\n    };\n}\nasync function handleAuth(args, config, userMiddlewareOrRoute) {\n    const request = (0,_env_js__WEBPACK_IMPORTED_MODULE_3__.reqWithEnvURL)(args[0]);\n    const sessionResponse = await getSession(request.headers, config);\n    const auth = await sessionResponse.json();\n    let authorized = true;\n    if (config.callbacks?.authorized) {\n        authorized = await config.callbacks.authorized({\n            request,\n            auth\n        });\n    }\n    let response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.next?.();\n    if (authorized instanceof Response) {\n        // User returned a custom response, like redirecting to a page or 401, respect it\n        response = authorized;\n        const redirect = authorized.headers.get(\"Location\");\n        const { pathname } = request.nextUrl;\n        // If the user is redirecting to the same NextAuth.js action path as the current request,\n        // don't allow the redirect to prevent an infinite loop\n        if (redirect && isSameAuthAction(pathname, new URL(redirect).pathname, config)) {\n            authorized = true;\n        }\n    } else if (userMiddlewareOrRoute) {\n        // Execute user's middleware/handler with the augmented request\n        const augmentedReq = request;\n        augmentedReq.auth = auth;\n        response = // @ts-expect-error\n        await userMiddlewareOrRoute(augmentedReq, args[1]) ?? next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.next();\n    } else if (!authorized) {\n        const signInPage = config.pages?.signIn ?? `${config.basePath}/signin`;\n        if (request.nextUrl.pathname !== signInPage) {\n            // Redirect to signin page by default if not authorized\n            const signInUrl = request.nextUrl.clone();\n            signInUrl.pathname = signInPage;\n            signInUrl.searchParams.set(\"callbackUrl\", request.nextUrl.href);\n            response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.redirect(signInUrl);\n        }\n    }\n    const finalResponse = new Response(response?.body, response);\n    // Preserve cookies from the session response\n    for (const cookie of sessionResponse.headers.getSetCookie())finalResponse.headers.append(\"set-cookie\", cookie);\n    return finalResponse;\n}\nfunction isSameAuthAction(requestPath, redirectPath, config) {\n    const action = redirectPath.replace(`${requestPath}/`, \"\");\n    const pages = Object.values(config.pages ?? {});\n    return (actions.has(action) || pages.includes(redirectPath)) && redirectPath === requestPath;\n}\nconst actions = new Set([\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\"\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/providers/credentials.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/providers/credentials.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/credentials */ \"(rsc)/./node_modules/@auth/core/providers/credentials.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUNVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcz83NjM5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAYXV0aC9jb3JlL3Byb3ZpZGVycy9jcmVkZW50aWFsc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCJAYXV0aC9jb3JlL3Byb3ZpZGVycy9jcmVkZW50aWFsc1wiO1xuIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/providers/credentials.js\n");

/***/ })

};
;