"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-resize-detector";
exports.ids = ["vendor-chunks/react-resize-detector"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-resize-detector/build/index.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-resize-detector/build/index.esm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ResizeDetector),\n/* harmony export */   useResizeDetector: () => (/* binding */ useResizeDetector),\n/* harmony export */   withResizeDetector: () => (/* binding */ withResizeDetector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/debounce */ \"(ssr)/./node_modules/lodash/debounce.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/throttle */ \"(ssr)/./node_modules/lodash/throttle.js\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n /*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ \n/* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nvar patchResizeHandler = function(resizeCallback, refreshMode, refreshRate, refreshOptions) {\n    switch(refreshMode){\n        case \"debounce\":\n            return lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default()(resizeCallback, refreshRate, refreshOptions);\n        case \"throttle\":\n            return lodash_throttle__WEBPACK_IMPORTED_MODULE_3___default()(resizeCallback, refreshRate, refreshOptions);\n        default:\n            return resizeCallback;\n    }\n};\nvar isFunction = function(fn) {\n    return typeof fn === \"function\";\n};\nvar isSSR = function() {\n    return \"undefined\" === \"undefined\";\n};\nvar isDOMElement = function(element) {\n    return element instanceof Element || element instanceof HTMLDocument;\n};\nvar createNotifier = function(setSize, handleWidth, handleHeight) {\n    return function(_a) {\n        var width = _a.width, height = _a.height;\n        setSize(function(prev) {\n            if (prev.width === width && prev.height === height) {\n                // skip if dimensions haven't changed\n                return prev;\n            }\n            if (prev.width === width && !handleHeight || prev.height === height && !handleWidth) {\n                // process `handleHeight/handleWidth` props\n                return prev;\n            }\n            return {\n                width: width,\n                height: height\n            };\n        });\n    };\n};\nvar ResizeDetector = /** @class */ function(_super) {\n    __extends(ResizeDetector, _super);\n    function ResizeDetector(props) {\n        var _this = _super.call(this, props) || this;\n        _this.cancelHandler = function() {\n            if (_this.resizeHandler && _this.resizeHandler.cancel) {\n                // cancel debounced handler\n                _this.resizeHandler.cancel();\n                _this.resizeHandler = null;\n            }\n        };\n        _this.attachObserver = function() {\n            var _a = _this.props, targetRef = _a.targetRef, observerOptions = _a.observerOptions;\n            if (isSSR()) {\n                return;\n            }\n            if (targetRef && targetRef.current) {\n                _this.targetRef.current = targetRef.current;\n            }\n            var element = _this.getElement();\n            if (!element) {\n                // can't find element to observe\n                return;\n            }\n            if (_this.observableElement && _this.observableElement === element) {\n                // element is already observed\n                return;\n            }\n            _this.observableElement = element;\n            _this.resizeObserver.observe(element, observerOptions);\n        };\n        _this.getElement = function() {\n            var _a = _this.props, querySelector = _a.querySelector, targetDomEl = _a.targetDomEl;\n            if (isSSR()) return null;\n            // in case we pass a querySelector\n            if (querySelector) return document.querySelector(querySelector);\n            // in case we pass a DOM element\n            if (targetDomEl && isDOMElement(targetDomEl)) return targetDomEl;\n            // in case we pass a React ref using React.createRef()\n            if (_this.targetRef && isDOMElement(_this.targetRef.current)) return _this.targetRef.current;\n            // the worse case when we don't receive any information from the parent and the library doesn't add any wrappers\n            // we have to use a deprecated `findDOMNode` method in order to find a DOM element to attach to\n            var currentElement = (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.findDOMNode)(_this);\n            if (!currentElement) return null;\n            var renderType = _this.getRenderType();\n            switch(renderType){\n                case \"renderProp\":\n                    return currentElement;\n                case \"childFunction\":\n                    return currentElement;\n                case \"child\":\n                    return currentElement;\n                case \"childArray\":\n                    return currentElement;\n                default:\n                    return currentElement.parentElement;\n            }\n        };\n        _this.createResizeHandler = function(entries) {\n            var _a = _this.props, _b = _a.handleWidth, handleWidth = _b === void 0 ? true : _b, _c = _a.handleHeight, handleHeight = _c === void 0 ? true : _c, onResize = _a.onResize;\n            if (!handleWidth && !handleHeight) return;\n            var notifyResize = createNotifier(function(setStateFunc) {\n                return _this.setState(setStateFunc, function() {\n                    return onResize === null || onResize === void 0 ? void 0 : onResize(_this.state.width, _this.state.height);\n                });\n            }, handleWidth, handleHeight);\n            entries.forEach(function(entry) {\n                var _a = entry && entry.contentRect || {}, width = _a.width, height = _a.height;\n                var shouldSetSize = !_this.skipOnMount && !isSSR();\n                if (shouldSetSize) {\n                    notifyResize({\n                        width: width,\n                        height: height\n                    });\n                }\n                _this.skipOnMount = false;\n            });\n        };\n        _this.getRenderType = function() {\n            var _a = _this.props, render = _a.render, children = _a.children;\n            if (isFunction(render)) {\n                // DEPRECATED. Use `Child Function Pattern` instead\n                return \"renderProp\";\n            }\n            if (isFunction(children)) {\n                return \"childFunction\";\n            }\n            if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(children)) {\n                return \"child\";\n            }\n            if (Array.isArray(children)) {\n                // DEPRECATED. Wrap children with a single parent\n                return \"childArray\";\n            }\n            // DEPRECATED. Use `Child Function Pattern` instead\n            return \"parent\";\n        };\n        var skipOnMount = props.skipOnMount, refreshMode = props.refreshMode, _a = props.refreshRate, refreshRate = _a === void 0 ? 1000 : _a, refreshOptions = props.refreshOptions;\n        _this.state = {\n            width: undefined,\n            height: undefined\n        };\n        _this.skipOnMount = skipOnMount;\n        _this.targetRef = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)();\n        _this.observableElement = null;\n        if (isSSR()) {\n            return _this;\n        }\n        _this.resizeHandler = patchResizeHandler(_this.createResizeHandler, refreshMode, refreshRate, refreshOptions);\n        _this.resizeObserver = new window.ResizeObserver(_this.resizeHandler);\n        return _this;\n    }\n    ResizeDetector.prototype.componentDidMount = function() {\n        this.attachObserver();\n    };\n    ResizeDetector.prototype.componentDidUpdate = function() {\n        this.attachObserver();\n    };\n    ResizeDetector.prototype.componentWillUnmount = function() {\n        if (isSSR()) {\n            return;\n        }\n        this.observableElement = null;\n        this.resizeObserver.disconnect();\n        this.cancelHandler();\n    };\n    ResizeDetector.prototype.render = function() {\n        var _a = this.props, render = _a.render, children = _a.children, _b = _a.nodeType, WrapperTag = _b === void 0 ? \"div\" : _b;\n        var _c = this.state, width = _c.width, height = _c.height;\n        var childProps = {\n            width: width,\n            height: height,\n            targetRef: this.targetRef\n        };\n        var renderType = this.getRenderType();\n        switch(renderType){\n            case \"renderProp\":\n                return render === null || render === void 0 ? void 0 : render(childProps);\n            case \"childFunction\":\n                {\n                    var childFunction = children;\n                    return childFunction === null || childFunction === void 0 ? void 0 : childFunction(childProps);\n                }\n            case \"child\":\n                {\n                    // @TODO bug prone logic\n                    var child = children;\n                    if (child.type && typeof child.type === \"string\") {\n                        // child is a native DOM elements such as div, span etc\n                        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                        childProps.targetRef;\n                        var nativeProps = __rest(childProps, [\n                            \"targetRef\"\n                        ]);\n                        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, nativeProps);\n                    }\n                    // class or functional component otherwise\n                    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, childProps);\n                }\n            case \"childArray\":\n                {\n                    var childArray = children;\n                    return childArray.map(function(el) {\n                        return !!el && /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(el, childProps);\n                    });\n                }\n            default:\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(WrapperTag, null);\n        }\n    };\n    return ResizeDetector;\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\nfunction withResizeDetector(ComponentInner, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var ResizeDetectorHOC = /** @class */ function(_super) {\n        __extends(ResizeDetectorHOC, _super);\n        function ResizeDetectorHOC() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.ref = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)();\n            return _this;\n        }\n        ResizeDetectorHOC.prototype.render = function() {\n            var _a = this.props, forwardedRef = _a.forwardedRef, rest = __rest(_a, [\n                \"forwardedRef\"\n            ]);\n            var targetRef = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : this.ref;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ResizeDetector, __assign({}, options, {\n                targetRef: targetRef\n            }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ComponentInner, __assign({\n                targetRef: targetRef\n            }, rest)));\n        };\n        return ResizeDetectorHOC;\n    }(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n    function forwardRefWrapper(props, ref) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ResizeDetectorHOC, __assign({}, props, {\n            forwardedRef: ref\n        }));\n    }\n    var name = ComponentInner.displayName || ComponentInner.name;\n    forwardRefWrapper.displayName = \"withResizeDetector(\".concat(name, \")\");\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(forwardRefWrapper);\n}\nvar useEnhancedEffect = isSSR() ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\nfunction useResizeDetector(_a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.skipOnMount, skipOnMount = _c === void 0 ? false : _c, refreshMode = _b.refreshMode, _d = _b.refreshRate, refreshRate = _d === void 0 ? 1000 : _d, refreshOptions = _b.refreshOptions, _e = _b.handleWidth, handleWidth = _e === void 0 ? true : _e, _f = _b.handleHeight, handleHeight = _f === void 0 ? true : _f, targetRef = _b.targetRef, observerOptions = _b.observerOptions, onResize = _b.onResize;\n    var skipResize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(skipOnMount);\n    var localRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var resizeHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var ref = targetRef !== null && targetRef !== void 0 ? targetRef : localRef;\n    var _g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        width: undefined,\n        height: undefined\n    }), size = _g[0], setSize = _g[1];\n    useEnhancedEffect(function() {\n        if (!handleWidth && !handleHeight) return;\n        var notifyResize = createNotifier(setSize, handleWidth, handleHeight);\n        var resizeCallback = function(entries) {\n            if (!handleWidth && !handleHeight) return;\n            entries.forEach(function(entry) {\n                var _a = entry && entry.contentRect || {}, width = _a.width, height = _a.height;\n                var shouldSetSize = !skipResize.current;\n                if (shouldSetSize) {\n                    notifyResize({\n                        width: width,\n                        height: height\n                    });\n                }\n                skipResize.current = false;\n            });\n        };\n        resizeHandler.current = patchResizeHandler(resizeCallback, refreshMode, refreshRate, refreshOptions);\n        var resizeObserver = new window.ResizeObserver(resizeHandler.current);\n        if (ref.current) {\n            resizeObserver.observe(ref.current, observerOptions);\n        }\n        return function() {\n            var _a, _b;\n            resizeObserver.disconnect();\n            (_b = (_a = resizeHandler.current).cancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n        };\n    }, [\n        refreshMode,\n        refreshRate,\n        refreshOptions,\n        handleWidth,\n        handleHeight,\n        observerOptions,\n        ref.current\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        onResize === null || onResize === void 0 ? void 0 : onResize(size.width, size.height);\n    }, [\n        size\n    ]);\n    return __assign({\n        ref: ref\n    }, size);\n}\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-resize-detector/build/index.esm.js\n");

/***/ })

};
;